	- В общому PHP не регістрозависимий. Хоча є вийнятки.
	- PHP код мош писати перед <!doctype>
-------------- htaccess - файл настойки для цього сайта. -------------------
1. У файлі .htaccess # - це коментарій. Апатч це не обробляє. Діє від решітки, до кінця строки.
2. У файлі .htaccess нема розділових знаків. У ньому зазвичай пишуть строчки
	- Option Indexex FoffowSymlinks - Якщо 'DirectoryIndex' перевів запрос сюди, то ця строчка зроить так, щоб вивілось содержиме папки. А якщо я не хочу щоб воно показувалось, треба поставити перед Indexex мінус. //Option -Indexex FoffowSymlinks 
	- DirectoryIndex index.php - тут указую, який файл буде головний (index.php). Якщо вказаного файла нема, то він звернеться до строчки 'Option Indexex FoffowSymlinks'
 3. Ці строчки і так стоять в настройках сервера, але вони не надійні, тож краще їх написати.
 4. Якщо я хочу щось змінити у настройках сервера або ще чогось, я пишу php_flag назву того що я хочу змінити і через пробел вже пишу його значення // php flag asp_tags on 
 - Коли 500та помилка, часто буває, що помилка в .htaccess 
--------------------------------- Настройки файла PHP....ini ------------------------------
1. У файлі PHP....ini ; - це коментарій.
2. У файлі PHP....ini розділовим знаком від свойства до значення цьго свойства служить знак '=' // extension = fail.dll (підключення якогось файла).
--------------------
1. Щоб убідитися, що все добре, щоб подивити що до чого можна создати файл info.php i создати там ф-цію phpinfo(); І якщо у адресній строці вказати цей файл, сервер дасть усю інформацію.
2. Якщо лізти у глобальні настройки, або php.ini, то треба буде перезагружати сервер. 
2. Є 4 способи сказати серверу, що зараз буде php код
	- <?php ...... ?>
	- <script language='php'> .... </script>
	- <? ...... ?> з версії 5.4 завжди включений
	- <% ...... %>  - скоро видалять
3. Коментарі
	- однострокові - //, #
	- багатострокові - /* ...... */
4. Кожна інструкція закінчується на ';'.
5. echo i print одинакові. І те і інше можна писати з круглими дужками, а можна без дужок. Різниця у тому, що після echo можна ставити кому і далі писати, і це вже буде ни я написав ще раз echo // echo 'Hello', 'my', 'friend';
6. Я так поняв, що php розуміє html, оскільки можна написати echo '<h1>Hello, world</h1>';
7. Ф-ція strftime(); - покаже дату // strftime('Сегодня %d-%m-%Y');
8. Змінні:
	- Всі змінні в php почанаються з '$'
	- Перший символ після '$' має бути буква або символ підчеркування(_).
	- Всі послідуючі символи можуть бути буквами, цифрами або символами підчеркування
	- Регістрозависимость
	- Якщо змінна складається з 2-х слів, використовувати камелкейс або підчеркування(_) // user_name, userName; Історично так склалось, що коли прийшли джавісти внедряти ооп в пхп, вони робили через камелкейс. Відтоді пийнято з ооп працювати через камелкейс
9. Ф-ція unset видалить повнісю елемент ( змінну або ключ в масиві ) // unset($zminna);
10. Якщо включений sort, то замість echo можна використати '=';
12. Ошибки. В головному файлі PHP 2 директиви відповідають за помилки. 
	- display_errors = on/of - показувати чи не показувати помилки.
	- error_reporting - тут вирішується які ошибки показувати.
 - Це можна змінити і в .htacess або у самому коді ini_set('display_errors', 1);
 - Зачастую якщо виявилась помилка на 18 строці, то вона мабуть в попередній строці (17 тій).
 - Якщо виявилось дуже багато помилок, краще починати з 1-ї. Можли всі інші помилки виникли через неї.
 - Основні уровні помилок
	- E_PARSE - інтерпритатор PHP спочатку продивлює код на предмет помилок, а потім виконує. Якщо при початковому просмотрі коду виявилась помилка, ця помилка буде відноситись до E_PARSE. // Parse error
	- E_ERROR - (fatal_error) - виведе помилку і виконання коду закінчиться.
	- E_WARNING -  виведе помилку, але виконання коду продовжиться.
	- E_NOTICE - це не помилка, скоріше легке попередження. По умолчанію її не видно, бо так є у настройках. Звичайно це можна змінити.
 - Відключити показ помилок 
	- error_reporting(E_ALL) - показати всі
	- error_reporting(0) - не показувати помилки
 - Виборочно
	- error_reporting(E_ERROR | E_WARNING);
	- error_reporting(E_ALL & ~ E_DEPRECATED(застарілі));
 - Хоча E_PARSE покажеться в будь-якому випадку, оскільки він починає працювати перед виконанням коду.
13. Змінні у PHP так само як у java-script. 
	- У PHP можна создавати ссилки на якусь змінну $x = 10; $y =& $x. Тіпа ярлика або об’єкта у java-script. Тобто на 10 будуть ссилатися 'x' i 'y'	- Но! аж удалити 'x', удалиться тільки 'x' без содержимого, і залишиться y = 10; Цей процес називається розрив ссилки


 - php рахує не по символах, а по байтах. Тож якшо у ютф 8 кожен символ займає 2 байти, то ф-ція strlen('вася') поверне 8(байтыв). 
	- Латинські символи займають 1 байт - strlen('ivan') // 4
	- Для вирішення цієї проблеми є надстройки. У спеціаліста бкло доповнення, де він писав mb_strlen() і тоді все рахувало посимвольно
 - пхп працює з браузером, отже все старається перевести в строку при виводі. Тобто орератор ехо пробує перевести всі типи строку все що може. тру в 1 і тд...
	 - тож правила переведення в типи трохи змінюються. Наприклад $х = true; echo $x * 10; // 10 - оскільки $x перевівся в 1
	- $x = false; echo $x // пуста строка 


