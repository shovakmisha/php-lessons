1) Є ф-ція get_object_vars(). Вона повертає всі свойства класу/обєкта. Є ф-ція і для методів, але не суть. Суть у тому, що вона повертає всі видимі(не privat) свойства. В процесі кодування я можу добавити в обєкт якесь свойство і воно покажеться цією ф-цією. Але якщо запихнути її у клас (return get_obj ect_vars($this);), то вона буде показувати всі свойства і privat і ті, що я створив на льоту. 

2) Начиная с РНР 8.0, в параметрах конструктора можно задать область видимости свойств

	- puЬlic function _construct (private int $х = О, private int $у = 0)
	
3) Дивно, але я це ніде не писав. Коли я звертаюсь до privat свойства, пхп видає Fatal error

4) Статичний метод/змінна не чекає поки буде створений обєкт (і це логічно). До нього зразу можна звернутись - Class::static

5) Чтобы обратиться к внутренне­му содержимому объекта, используется ключевое слово $this, а для обращения к внутреннему содержимому класса - ключевое слово self. Але внутрішнє содержиме обєкта закінчується на статичниї змінних. Просто це так пафосно звучить, мабуть я це написав для співбесід, хоча ще спеціаліст про це розказував іншими словами.

6) Це складно. І це сеньйорська таска. Це і про статичні свойства і про деструкт. Є клас, який рахує скільки було створено з нього обєктів. Для простоти скажу, що всі ці обєкти будуть лежати в масиві. Тож - я створив 5 обєктів. Змінній static присвоїлось число 5. 

	- Клас також має метод деструкт, який зменшує к-сть у змінній static на 1, кожного разу коли я до нього звертаюсь - $objs[4] = пull; - викличеться деструкт і видалить обєкт з масиву
	
	- $objs = []; - Опустошую масив - тим самим - викликаю деструкт стільки разів, скільки треба, щоб опустошити масив.
	
7) Метод __call (та я думаю і __get i __set) перехватують помилки. Тобто коли я звертаюсь до якогось метода - його може не бути, або він може бути приватним - помилки всеодно не буде. Звісно якщо я описав цей метод в __call

8) Також можна на льоту описати статичний метод - class МiпМах
							public static function __callStatic(string $method, array $arr)
								return min($arr); -  echo МinМах::min(43, 18, 5, 61, 23, 10, 56, 36) ; // 5
								
								- Тобто я повертаю ф-цію min і вона зразу стає статичною
								
9) Начиная с версии РНР 8.0, доступен оператор ?-> когда метод возвращает либо объект, либо неопределенное значение null. Якщо без цього оператора, то повернення null не буде - буде помилка.

10) public function construct (puЬlic ?Point $Ьegin, puЬlic ?Point $end) - ці знаки запитування теж оператор - конструктор будет ожидать либо объект класса Point, либо неопределенное значение null

11) 
