
 ------------------ 10. Использование рендереров в админке Magento ------------------------

 1) Я вже писав про гріди. Але це стандартні шаблони. Тут я буду писати самопись

	- Всі стандартні типи полів тут - lib/Varien/Data/Form/Element

 2) Я не знав що коли приходять дані постом, то картинки хранятся у глобальній змінній _FILES - http://joxi.ru/52agYDMf4VJe5r

 3) !!!! Я не додивив урок до кінця. Якщо буде подібна таска, треба буде глянути останні 3хв

	- Це із за того що я не хотів ствоювати тут новий тип для картинок - lib/Varien/Data/Form/Element/ а створив у своєму модулі

	- Створення нового типу у папці ліб досить зручно. По перше тип елемента форми буде називатись як файл. 

		- Тобто lib/Varien/Data/Form/Element/Myimage.php - $fieldset->addField('image', 'myimage', array( - це для відображення картинок

		- А іще цей новий тип можна буде використовувати у файлі system.xml - <frontend_type>myimage</frontend_type>

 4) Вкінці я вивів цю всю діч на фронт - http://joxi.ru/12MzjodiMVBYVA - magento.on/app/design/frontend/base/default/template/siteblocks/list.phtml

 ---------------------- 11. Использование WYSIWYG редактора в админке Magento -----------------------

 5) Шукаю приклад як це зроблено в мадженті - app/code/core/Mage/Adminhtml/Block/Cms/Block/Edit/Form.php 

	$fieldset->addField('content', 'editor', array( - копіюю його у свою форму
            'name'      => 'content',
            'label'     => Mage::helper('cms')->__('Content'),
            'title'     => Mage::helper('cms')->__('Content'),
            'style'     => 'height:36em',
            'required'  => true,
            'config'    => Mage::getSingleton('cms/wysiwyg_config')->getConfig()
        ));

 6) Не забути в конфігах прописати лейаут для адмінки у якому треба буде додати конфіги для візівіка


 	- Це був візівік для гріда. Для добавлення візівіка на сторінки конфігурейшенів - http://joxi.ru/VrwElJwuOly4j2, вже по інакшому ------

 7) Треба створювати свій рендерер як для гріда на минуому уроці/ Тобто новий тип

	- У мене працювало і без створення нового типа. Я написав <frontend_type>editor</frontend_type> і у мене зразу зявився візівік. потім добавив сторінці потрібні скріпти у її лейаут і ок

	- А от у нього не працювало і він створював новий тип у папці lib на основі цього файлу - lib/Varien/Data/Form/Element/Editor.php (як називається файл так називається тип - 'editor')

		- У конструкторі для нового типа він прописав

			if (Mage::getSingleton('cms/wysiwyg_config')->isEnabled()) {
			    Mage::app()->getLayout()->getBlock('head')->setCanLoadTinyMce(true);
			    $this->setData('config',Mage::getSingleton('cms/wysiwyg_config')->getConfig());

				- Те саме я і для гріда писав

 -------------------- 12. Использование Rule Conditions (условий) в Magento -------------------------

 8) Це вкаладка Promotions у адмінці. Це і є умови. Якщо .... то ....

	- По дефолту у мадженті є 2 умови. Promotions > Catalog price rules i Promotions > Shopping Cart price rules. Вони знаходяться у папці app/code/core/Mage/Adminhtml/Block/Promo

 9) Я буду виводити блок на сторінці продукт пейджі. Тож мені треба добавити до блоку, який буде вивидитись в залежності від чогось на сторінці продукт пейджі кусок коду з app/code/core/Mage/Adminhtml/Block/Promo/Catalog/Edit/Tab/Conditions.php - http://joxi.ru/Dr8RE7kC4GV592 - цей блок.

 1) conditions_serialized: в этом поле сохраняются данные условий корзины покупок в сериализованной форме. Від себе можу сказати що в цій таблиці зберігались мої кондішни для рядка гріда - http://joxi.ru/4AkgeRYfyWKM0A

 2) actions_serialized: в этом поле будут сохранены данные о состоянии товара в корзине в виде сериализованной строки. Скоріш за все це для - Shopping cart price rules

 3) Модель для кондішнів расширяется от класса Mage_Rule_Model_Rule

	- Обовязково в ній має бути методы: getConditionsInstance, getActionsInstance

	- Метод loadPost() используется для добавления данных в модель и подготовки к сохранению в базе данных.

 



----------------- 13. Создание вкладок на странице редактирования в админке Magento -----------------

 1) Суть у тому що на різних вкладках будуть елементи однієї форми

 2) Загляните в реализацию метода addTab и увидете, что на вход можно подавать массив, объект, строку. И есть некоторые отличия. Тут я рекомендую, заглянуть в видео, где это я наглядно демонстрирую. Но и тут замолвлю словечко. 

	- Если мы передаем в метод строку, то класс вкладки обязан имплементить интерфейс Mage_Adminhtml_Block_Widget_Tab_Interface. Иначе вы получите ошибку. А интерфейс требует реализации 4 методов. Поэтому в примере мы используем 2 варианта для демонстрации. На практике, лучше использовать одинаковые способы добавления вкладок.

 3) !!!!!!!!! У ТАБУ Я ДОДАВ ФОРМУ ЩО РОБИВ НА ПОПЕРЕДНІХ УРОКАХ

	- Разделили элементы формы. И не забываем убрать флаг $form->setUseContainer(true);. Cоответственно поля из исходного файла формы можно удалить.

 4) Как сделать вывод блока вкладок.

	Способ №1 в контроллере: public function editAction(){ - $this->_addLeft($this->getLayout()->createBlock('siteblocks/adminhtml_siteblocks_edit_tabs'));




-------------















