
 ---------- 1 - The Magento Config - https://alanstorm.com/magento_config/ ----------

 1) У цій статті він нічого нового не написав, тільки була створена мінімальна конфігурація для модуля -  Alanstormdotcom_Configviewer

	- Також був створений обсервер який виводив всі глобальні конфіги на фронт - http://magento.on/?showConfig=true

	- Цікаво що обсервер запрацював без контроллера. Ніхто не наводив код на цей модуль. Я просто підписався на івент і метод обсервера запустився.

	- Але це також може бути проблемою. У мене були помилки в цьому коді і я не міг зрозуміти де помилка, поки не зрозумів що обсервери теж відпрацьовують

 ---------- 2 - Magento Controller Dispatch and Hello World - https://alanstorm.com/magento_controller_hello_world/ ---------

 1) Когда маршрутизатор анализирует URL, он разделяется следующим образом - http://example.com/frontName(<frontName> тег з файла конфіга config.xml)
												/actionControllerName(src/app/code/local/Alanstormdotcom/Helloworld/controllers/IndexController.php )
												  /actionMethod(src/app/code/local/Alanstormdotcom/Helloworld/controllers/IndexController.php - public function indexAction() {...)
		
		- Це я описав шлях до файлів, які маджента буде шукати при такому запросі - http://exmaple.com/helloworld/index/index

			- Тобто http://exmaple.com/checkout/cart/add - знайде в конфігах <frontName>checkout</frontName>, подивить в конфігах, який модуль до цього фронтнейма відноситься - Mage_Checkout і у цьому модулі у папці controllers знайде файл CartController.php і викличе метод addAction()
	
 2) Створюю новий роут для фронта 
	<frontend>
		<routers>
			<helloworld> - Этот тег должен быть строчной версией названия вашего модуля. Наш модуль называется Helloworld, этот тег - helloworld.
				<use>standard</use> - Я не впевнений, але мабуть це стандартний роутер - Mage_Core_Controller_Varien_Router_Standard - це тільки догадки
				<args>
					<module>Alanstormdotcom_Helloworld</module> - Этот тег модуля должен быть полным именем вашего модуля Кампанія/Модуль. Это будет использоваться системой для поиска файлов вашего контроллера.

					<frontName>helloworld</frontName> - це буде перше в адресній строці - http://example.com/frontName/ - Соглашение о том, что frontNames совпадает с именами модулей, не является обязательным. Фактически, один модуль может определять несколько <routers> и, следовательно, иметь несколько frontNames.
				</args>
			</helloworld>
		</routers>
	</frontend>

 3) В цій статті я створив декілька простих контролерів, щоб подивити як маджента розбарає юрл і на які контролери і екшни вона відправляє запрос. Але це не були поглиблені статті. Тут були тільки вершки. Тіпа ця юр-лка відправляє на цей метод, а ця на цей і тд...

 4) Всі фронтові контролери наслідуються від Mage_Core_Controller_Front_Action. Цей клас має метод getRequest(), який поверне обєкт реквесту. Тож всі котролери мають метод getRequest()



 ---------------- 3 Layouts, Blocks and Templates - https://alanstorm.com/layouts_blocks_and_templates/ ----------------

 1) Блоки рендеряться методом toHtml() тому що у цей метод указаний  атрибуті блока output -  <block type="page/html" name="root" output="toHtml" template="simple_page.phtml" />

 2) Атрибут type="page/html" вказує на то який клас буде $this у темплейта. Як воно оприділяє цей клас. Хоча система лейаутів і конфігів це 2 різні системи, всі класи лейаутів є у глобальниї конфігах. Тож коли я пишу атрибут type="page/html" це означає що я звертаюсь до глобальних кофігів шукати клас $_xml->global->blocks

	- page/html = $_xml->global->blocks->page - page це нода у конфігах, у якій храниться імя класа - http://joxi.ru/xAeg0WjfpwYzOm

	- page/html - html - це приставка до класу, який храниться в ноді <page> - Тож повне імя класу - Mage_Page_Block_Html

	- Але взагалі сам запис <block type="page/html" name="root" output="toHtml" template="simple_page.phtml" /> не правильний. По суті це я вставив блок "root" у блок "root". Це ставить мадженту в стан неопридільонності, так як всі блоки в мадженті мають бути з унікальними іменами, а в мене тепер 2 блоки з одинаковим іменем. Хоча маджента не викинула помилку, так не можна робити.

 3) <update> - апдейт не використовуються для перезаписування блоків. Вони використовуюються для оновлення або модифікації блока.

 4) Про лейаути можна думати як про конфіги. Типу всі лейаути що є в маджеті зєднуються в 1 файл local.xml і звідти вже будуть братись ті блоки, які потрібні сторінці

 5) getPackageLayout()->asXML() - цим методом Алан вивів всі глобальні конфігураціїї лейаутів (Типу як у конфінів, тільки для лейаутів). За звичай цей метод збере всі лейаути з цієї папки - app/design/frontend/base/default/layout/ . Хоча правильніше буде сказати що це виведуться всі лейаути текущої теми

	- Соотвецтвенно темплейти по дефолту він бере з app/design/frontend/base/default/template. Ну і понятне діло що якщо є якісь оверайди то вони теж будуть захвачені

	- Мабуть у 2-й мадженті будуть шукатись лейаути і у папці code, а не тільки у frontend

 6) <?php echo $this->getChildHtml('top.links'); ?> - Цей блок вивів заголовок сторінки чи її тайтл, кароче шось в такому роді




	











 
