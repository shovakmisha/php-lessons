- set_error_hendler( function ); - обработчик помилок. Ф-ція яка буде обробляти помилки буде кастомна. Мені залось шо це більше схоже на доповнення до стандартий помилок, тобто розширити функціонал. Короче детальніше - 1 левел, 3-й урок 2:20
	- error_log() - ф-ція, яка створить або якщо він вже є редагує лог файл. Спеціаліст кастомізірував ф-цію вивода помилок set_error_hendler() і додав туди файл, лінію у якому була ця помилка і час, коли вона створилась, потім заніс ці дані у цей файлик. Логіка була така, що якщо створюється помилка, про яку я здогадуюсь, буде повідомлення, яке я напишу, інакше, те, що по дефолту в пхп
	- Ця ф-ція буде виводити і помилки пхп теж. І з ними можна буде працювати. Тобто по аргументах ф-ції порозкидуються дані помилки
	- Щоб пхп не виводив свої помилки, є ф-ція error_reporting(0); Якщо я напишу цю ф-цію, я зможу виводити тільки свої кастомні ф-ції для помилок
	- trigger_error() - вроді запустить обработчик 
- Просмотреть содержимое всех масивов можно в результате вызова функции phpinfo(). Вся ця інформація відправляється на сервер. Командою, що відправляє все це на сервер є - пуста строка.
 - При запросі методом GET, перевод строки(\r\n) означає кінець заголовка. Командою, що відправляє все це на сервер є - пуста строка.
 - Взагалі Процес запроса методом GET, виглядає так - GET /folder.index.html. Це я не файл запросив, а адрес. Браузер ще не знає, що там файл.
 - Коли я даю запрос на сервер, я передаю йому дополнітельно деякі заголовки (інформацію про себе). Під кожний заголовок сервер виділяє отдільну змінну. Єдиним обов’язковим заголовком є - Host(домен сайта). Якщо його не буде - буде помилка 400. Всі інші заголовки залежать ві браузера. Наприклад
	- User-Agent - Інформація про браузер
	- referer - сайт з якого я прийшов
	- короче всі заголовки мош подивити. Приклад є у демо-сайті, аж у адресній строці навести на файл info.php У тому файлі ф-ція, яка виведе всю інфу
	- Спеціаліст каже не довіряти на 100% заголовкам, які пришле сервер.
 - _SERVER["REQUEST_METHOD"] - Яким методом я запросив дані у сервера
 - Сервер мені відповідає тим самим зєднуванням і теж пересилає заголовки 
	- Статус з’єднання. 200 - все добре / 404 - папка не знайдена
	- імя сервера, довжину контента..... і т.д. Доречі за допомогою Content-Length сервер орієнтуєся чи сайт повністю загрузився
	- Командою, що заголовки закінчились і треба відправити все це на мій компютер є - пуста строка.
	- Заголовок розміру контента в байтах вроді оприділяє, коли завершувати запрос, хоча це може він мав на увазі, що я по цьому заголовку можу оприділяти чи всі дані прийшли 
1. Якщо action пустий, форма буде оброблятись файлом у якому форма.
2. 1. Якщо method пустий, буде GET.
2. Вся інформація про сервер на якому текуший сайт знаходиться у масиві _SERVER.
3. _SERVER["QUERY_STRING"] - у адресній строці. Від ? і до кінця. 
4. При методі POST, завжди передаеться Referer. Також передається Content-Type, Content-length
	- також при методі POST, на відміну від GET, пуста строка не означає кінець запросу. Вона означає, що заголовки закінчились, після них підуть дані, що я передав.
5. Ф-ція strip_tags() - вирізає всі теги.
6. В принципі, коли я гуляю по інтернету (клацаю по ссилках), це я запрошую від сервера інформацію методом _GET. 
7. 8. Коли я передаю форму методом POST, 'REQUEST_METHOD' у файла-обробника змінюється на POST. Не знаю яким чином він це перевіряє
8. Щоб перевірити, яким методом передалася інформація, у масиві _SERVER є свойство REQUEST_METHOD. Це можна використати у файлі, який обробляє форму if( $_SERVER['REQUEST_METHOD'] == 'POST' ){якщо у цей файл щось передалося методом POST ...}
